"""Add pharmacy inventory system models

Revision ID: dcb63cdbec33
Revises: 1a31ce608336
Create Date: 2025-10-22 17:23:29.748906

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = 'dcb63cdbec33'
down_revision = '1a31ce608336'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('proveedor',
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('nit', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('telefono', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('direccion', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('ciudad', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('estado', sa.Boolean(), nullable=False),
    sa.Column('id_proveedor', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id_proveedor')
    )
    op.create_table('rol',
    sa.Column('nombre_rol', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('descripcion', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('permisos', sa.JSON(), nullable=True),
    sa.Column('id_rol', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id_rol')
    )
    op.create_table('sucursal',
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('direccion', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('telefono', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('ciudad', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('estado', sa.Boolean(), nullable=False),
    sa.Column('id_sucursal', sa.Integer(), nullable=False),
    sa.Column('fecha_creacion', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id_sucursal')
    )
    op.create_table('bodega',
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('descripcion', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('tipo', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('estado', sa.Boolean(), nullable=False),
    sa.Column('id_bodega', sa.Integer(), nullable=False),
    sa.Column('id_sucursal', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_sucursal'], ['sucursal.id_sucursal'], ),
    sa.PrimaryKeyConstraint('id_bodega')
    )
    op.create_table('usuario',
    sa.Column('nombre_completo', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('activo', sa.Boolean(), nullable=False),
    sa.Column('id_usuario', sa.Integer(), nullable=False),
    sa.Column('id_sucursal', sa.Integer(), nullable=False),
    sa.Column('id_rol', sa.Integer(), nullable=False),
    sa.Column('hash_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('fecha_creacion', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id_rol'], ['rol.id_rol'], ),
    sa.ForeignKeyConstraint(['id_sucursal'], ['sucursal.id_sucursal'], ),
    sa.PrimaryKeyConstraint('id_usuario')
    )
    op.create_index(op.f('ix_usuario_email'), 'usuario', ['email'], unique=True)
    op.create_table('auditoria',
    sa.Column('entidad_afectada', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('id_registro_afectado', sa.Integer(), nullable=False),
    sa.Column('accion', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('detalle', sa.JSON(), nullable=True),
    sa.Column('resultado', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('id_auditoria', sa.Integer(), nullable=False),
    sa.Column('id_usuario', sa.Integer(), nullable=False),
    sa.Column('fecha_accion', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id_usuario'], ['usuario.id_usuario'], ),
    sa.PrimaryKeyConstraint('id_auditoria')
    )
    op.create_table('lote',
    sa.Column('numero_lote', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('fecha_fabricacion', sa.Date(), nullable=False),
    sa.Column('fecha_vencimiento', sa.Date(), nullable=False),
    sa.Column('estado', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('observaciones', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('id_lote', sa.Integer(), nullable=False),
    sa.Column('id_proveedor', sa.Integer(), nullable=False),
    sa.Column('id_bodega', sa.Integer(), nullable=False),
    sa.Column('fecha_registro', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id_bodega'], ['bodega.id_bodega'], ),
    sa.ForeignKeyConstraint(['id_proveedor'], ['proveedor.id_proveedor'], ),
    sa.PrimaryKeyConstraint('id_lote')
    )
    op.create_table('producto',
    sa.Column('nombre_comercial', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('nombre_generico', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('codigo_interno', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('codigo_barras', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('forma_farmaceutica', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('concentracion', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('presentacion', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('unidad_medida', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('cantidad_total', sa.Integer(), nullable=False),
    sa.Column('cantidad_disponible', sa.Integer(), nullable=False),
    sa.Column('stock_minimo', sa.Integer(), nullable=False),
    sa.Column('stock_maximo', sa.Integer(), nullable=False),
    sa.Column('estado', sa.Boolean(), nullable=False),
    sa.Column('id_producto', sa.Integer(), nullable=False),
    sa.Column('id_lote', sa.Integer(), nullable=False),
    sa.Column('fecha_creacion', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id_lote'], ['lote.id_lote'], ),
    sa.PrimaryKeyConstraint('id_producto')
    )
    op.create_table('movimientoinventario',
    sa.Column('tipo_movimiento', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('cantidad', sa.Integer(), nullable=False),
    sa.Column('descripcion', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('id_movimiento', sa.Integer(), nullable=False),
    sa.Column('id_producto', sa.Integer(), nullable=False),
    sa.Column('id_usuario', sa.Integer(), nullable=False),
    sa.Column('id_sucursal_origen', sa.Integer(), nullable=True),
    sa.Column('id_sucursal_destino', sa.Integer(), nullable=True),
    sa.Column('fecha_movimiento', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id_producto'], ['producto.id_producto'], ),
    sa.ForeignKeyConstraint(['id_sucursal_destino'], ['sucursal.id_sucursal'], ),
    sa.ForeignKeyConstraint(['id_sucursal_origen'], ['sucursal.id_sucursal'], ),
    sa.ForeignKeyConstraint(['id_usuario'], ['usuario.id_usuario'], ),
    sa.PrimaryKeyConstraint('id_movimiento')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('movimientoinventario')
    op.drop_table('producto')
    op.drop_table('lote')
    op.drop_table('auditoria')
    op.drop_index(op.f('ix_usuario_email'), table_name='usuario')
    op.drop_table('usuario')
    op.drop_table('bodega')
    op.drop_table('sucursal')
    op.drop_table('rol')
    op.drop_table('proveedor')
    # ### end Alembic commands ###
